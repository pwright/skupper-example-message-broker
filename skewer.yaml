title: Accessing a message broker using Skupper
subtitle: Use [Skupper](https://skupper.io/) to consume from a job queue in a private datacenter
overview: |-
  This example is a multi-service messaging application that can
  be deployed across multiple Kubernetes clusters using Skupper.

  It contains three services:

  * A message broker running in a private data center

  * A job processor running in the public cloud

  * A job requstor, running in the private data center, that serves a
    REST API for submitting jobs
prerequisites: |-
  * The `kubectl` command-line tool, version 1.15 or later
    ([installation guide][install-kubectl])

  * The `skupper` command-line tool, the latest version ([installation
    guide][install-skupper])

  * Access to two Kubernetes namespaces, from any providers you
    choose, on any clusters you choose

  [install-kubectl]: https://kubernetes.io/docs/tasks/tools/install-kubectl/
  [install-skupper]: https://skupper.io/start/index.html#step-1-install-the-skupper-command-line-tool-in-your-environment
contexts:
  datacenter:
    kubeconfig: ~/.kube/config-datacenter
    namespace: datacenter
  cloud:
    kubeconfig: ~/.kube/config-cloud
    namespace: cloud
steps:
  - title: Configure separate kubeconfigs
    preamble: |-
      Since we are dealing with two namespaces, we need to set up
      isolated `kubectl` configurations, one for each namespace.  In
      this example, we will use distinct kubeconfigs on separate
      consoles.
    commands:
      cloud:
        - run: export KUBECONFIG=~/.kube/config-cloud
      datacenter:
        - run: export KUBECONFIG=~/.kube/config-datacenter
  - title: Log in to your clusters
    preamble: |-
      *Specific to your cloud provider*
  - title: Create your namespaces
    commands:
      cloud:
        - run: kubectl create namespace cloud
        - run: kubectl config set-context --current --namespace cloud
      datacenter:
        - run: kubectl create namespace datacenter
        - run: kubectl config set-context --current --namespace datacenter
  - title: Install Skupper in your namespaces
    commands:
      cloud:
        - run: skupper init
          await: [deployment/skupper-service-controller, deployment/skupper-router]
      datacenter:
        - run: skupper init --ingress none
          await: [deployment/skupper-service-controller, deployment/skupper-router]
  - title: Link your namespaces
    commands:
      cloud:
        - run: skupper token create ~/cloud.token
      datacenter:
        - run: skupper link create ~/cloud.token
        - run: skupper link status --wait 30
  - title: Deploy your services
    commands:
      cloud:
        - run: kubectl create deployment job-processor --image quay.io/skupper/job-processor
          await: [deployment/job-processor]
      datacenter:
        - run: kubectl apply -f message-broker.yaml
          await: [deployment/message-broker]
        - run: kubectl create deployment job-requestor --image quay.io/skupper/job-requestor
          await: [deployment/job-requestor]
  - title: Expose your services
    commands:
      datacenter:
        - run: skupper expose deployment/message-broker --port 5672
          sleep: 10
        - run: kubectl expose deployment/job-requestor --port 8080 --type LoadBalancer
          sleep: 10
  - title: Test your application
    commands:
      datacenter:
        - run: "curl -X POST $(kubectl get service/job-requestor -o jsonpath='http://{.status.loadBalancer.ingress[0].ip}:8080/send-request')"
          sleep: 1800
