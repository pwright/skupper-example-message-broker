title: Skupper Hello World
subtitle: A minimal HTTP application deployed across Kubernetes clusters using [Skupper](https://skupper.io/)
overview: |-
  This example is a very simple multi-service HTTP application that can
  be deployed across multiple Kubernetes clusters using Skupper.

  It contains two services:

  * A backend service that exposes an `/api/hello` endpoint.  It
    returns greetings of the form `Hello from <pod-name>
    (<request-count>)`.

  * A frontend service that accepts HTTP requests, calls the backend
    to fetch new greetings, and serves them to the user.

  With Skupper, you can place the backend in one cluster and the
  frontend in another and maintain connectivity between the two
  services without exposing the backend to the public internet.

  <img src="images/entities.svg" width="640"/>
prerequisites: |-
  * The `kubectl` command-line tool, version 1.15 or later
    ([installation guide][install-kubectl])

  * The `skupper` command-line tool, the latest version ([installation
    guide][install-skupper])

  * Two Kubernetes namespaces, from any providers you choose, on any
    clusters you choose

  [install-kubectl]: https://kubernetes.io/docs/tasks/tools/install-kubectl/
  [install-skupper]: https://skupper.io/start/index.html#step-1-install-the-skupper-command-line-tool-in-your-environment
kubeconfigs:
  west:
    file: ~/.kube/config-west
    namespace: west
  east:
    file: ~/.kube/config-east
    namespace: east
steps:
  - name: setup-namespaces
    title: Set up your namespaces
    sessions:
      - kubeconfig: west
        commands:
          - run: skupper init
            await: [deployment/skupper-service-controller, deployment/skupper-router]
      - kubeconfig: east
        commands:
          - run: skupper init --ingress none
            await: [deployment/skupper-service-controller, deployment/skupper-router]
  - name: link-namespaces
    title: Link your namespaces
    sessions:
      - kubeconfig: west
        commands:
          - run: skupper token create ~/west.token
      - kubeconfig: east
        commands:
          - run: skupper init --ingress none
            await: [deployment/skupper-service-controller, deployment/skupper-router]
          - run: skupper link create ~/west.token
            sleep: 10
          - run: skupper link status
  - name: deploy-services
    title: Deploy your services
    sessions:
      - kubeconfig: west
        commands:
          - run: kubectl create deployment hello-world-frontend --image quay.io/skupper/hello-world-frontend
            await: [deployment/hello-world-frontend]
      - kubeconfig: east
        commands:
          - run: kubectl create deployment hello-world-backend --image quay.io/skupper/hello-world-backend
            await: [deployment/hello-world-backend]
  - name: expose-services
    title: Expose your services
    sessions:
      - kubeconfig: west
        commands:
          - run: kubectl expose deployment/hello-world-frontend --port 8080 --type LoadBalancer
            sleep: 10
      - kubeconfig: east
        commands:
          - run: skupper expose deployment/hello-world-backend --port 8080
            sleep: 10
  - name: test
    title: Test your application
    sessions:
      - kubeconfig: west
        commands:
          - run: "curl $(kubectl get service hello-world-frontend -o jsonpath='http://{.status.loadBalancer.ingress[0].ip}:8080/')"
